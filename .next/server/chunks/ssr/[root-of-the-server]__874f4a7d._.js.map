{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///D:/PSYPHER%20AI%20PROJECT%20APP/tier-events/src/utils/supabase/client.ts"],"sourcesContent":["// src/utils/supabase/client.ts\r\nimport { createBrowserSupabaseClient } from '@supabase/auth-helpers-nextjs';\r\n\r\nexport const createClient = () => createBrowserSupabaseClient();\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEO,MAAM,eAAe,IAAM,CAAA,GAAA,wKAAA,CAAA,8BAA2B,AAAD","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///D:/PSYPHER%20AI%20PROJECT%20APP/tier-events/src/app/events/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useUser } from '@clerk/nextjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { createClient } from '@/utils/supabase/client';\r\nimport Image from 'next/image';\r\n\r\ntype Event = {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  event_date: string;\r\n  image_url: string;\r\n  tier: 'free' | 'silver' | 'gold' | 'platinum';\r\n};\r\n\r\nconst tierOrder = ['free', 'silver', 'gold', 'platinum'];\r\nconst fallbackImage = 'https://placehold.co/400x250/png?text=No+Image';\r\n\r\nexport default function EventsPage() {\r\n  const { user, isLoaded } = useUser();\r\n  const [events, setEvents] = useState<Event[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userTier, setUserTier] = useState<Event['tier']>('free');\r\n\r\n  // ⏫ Tier Upgrade\r\n  const upgradeTier = async (newTier: Event['tier']) => {\r\n    if (!user) return;\r\n    await fetch('/api/upgrade-tier', {\r\n  method: 'POST',\r\n  headers: { 'Content-Type': 'application/json' },\r\n  body: JSON.stringify({\r\n    userId: user.id,\r\n    newTier,\r\n  }),\r\n});\r\n\r\n    setUserTier(newTier);\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded || !user) return;\r\n\r\n    const fetchEvents = async () => {\r\n      const supabase = createClient();\r\n      const tier = (user.publicMetadata?.tier as Event['tier']) || 'free';\r\n      setUserTier(tier);\r\n      const { data, error } = await supabase.from('events').select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching events:', error.message);\r\n      } else {\r\n        const allEvents = data as Event[];\r\n        setEvents(allEvents);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [isLoaded, user]);\r\n\r\n  const allowedTiers = tierOrder.slice(0, tierOrder.indexOf(userTier) + 1);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Your Tier Events</h1>\r\n\r\n      {/* Tier Upgrade Buttons */}\r\n      <div className=\"flex gap-2 mb-6\">\r\n        {tierOrder.map((tier) => (\r\n          <button\r\n            key={tier}\r\n            onClick={() => upgradeTier(tier)}\r\n            className={`px-3 py-1 rounded text-white text-sm font-medium ${\r\n              tier === 'free'\r\n                ? 'bg-green-500'\r\n                : tier === 'silver'\r\n                ? 'bg-gray-500'\r\n                : tier === 'gold'\r\n                ? 'bg-yellow-500'\r\n                : 'bg-purple-600'\r\n            }`}\r\n          >\r\n            Upgrade to {tier.charAt(0).toUpperCase() + tier.slice(1)}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Events List */}\r\n      {loading ? (\r\n        <p>Loading events...</p>\r\n      ) : (\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n          {events.map((event) => {\r\n            const isLocked = !allowedTiers.includes(event.tier);\r\n\r\n            return (\r\n              <div\r\n                key={event.id}\r\n                className={`bg-white dark:bg-zinc-900 rounded-xl overflow-hidden shadow-md border ${\r\n                  isLocked ? 'opacity-60' : ''\r\n                }`}\r\n              >\r\n                <Image\r\n                  src={event.image_url || fallbackImage}\r\n                  alt={event.title}\r\n                  width={400}\r\n                  height={250}\r\n                  className=\"w-full h-48 object-cover\"\r\n                />\r\n                <div className=\"p-4\">\r\n                  <h2 className=\"text-xl font-semibold\">{event.title}</h2>\r\n                  <p className=\"text-gray-600 dark:text-gray-300\">{event.description}</p>\r\n                  <p className=\"text-sm text-gray-400 mt-2\">\r\n                    {new Date(event.event_date).toLocaleDateString()}\r\n                  </p>\r\n                  <span\r\n                    className={`inline-block mt-2 px-3 py-1 rounded-full text-xs font-medium text-white ${\r\n                      event.tier === 'free'\r\n                        ? 'bg-green-500'\r\n                        : event.tier === 'silver'\r\n                        ? 'bg-gray-500'\r\n                        : event.tier === 'gold'\r\n                        ? 'bg-yellow-500'\r\n                        : 'bg-purple-600'\r\n                    }`}\r\n                  >\r\n                    {event.tier.toUpperCase()}\r\n                  </span>\r\n\r\n                  {/* Locked message */}\r\n                  {isLocked && (\r\n                    <p className=\"text-red-500 mt-2 text-sm\">\r\n                      Upgrade to {event.tier.toUpperCase()} to access this event\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}